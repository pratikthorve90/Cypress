{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 2,
    "pending": 0,
    "failures": 2,
    "start": "2021-04-08T04:43:49.027Z",
    "end": "2021-04-08T04:44:13.576Z",
    "duration": 24549,
    "testsRegistered": 4,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d055b6fc-0e9c-486a-a6c9-a9be3ff988c1",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\Test1.js",
      "file": "cypress\\integration\\examples\\Test1.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "972ad3d4-61ce-4a49-a6af-b115bd5dad3d",
          "title": "My First Test : This is Test Suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC1 : Does not do anything",
              "fullTitle": "My First Test : This is Test Suite TC1 : Does not do anything",
              "timedOut": null,
              "duration": 393,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(true).to.equal(false);",
              "err": {
                "message": "AssertionError: expected true to equal false",
                "estack": "AssertionError: expected true to equal false\n    at Context.eval (http://localhost:51245/__cypress/tests?p=cypress\\integration\\examples\\Test1.js:102:21)",
                "diff": null
              },
              "uuid": "9213dab1-8d0e-4786-8d3b-97b42c434b13",
              "parentUUID": "972ad3d4-61ce-4a49-a6af-b115bd5dad3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC2 : Learning Assertions",
              "fullTitle": "My First Test : This is Test Suite TC2 : Learning Assertions",
              "timedOut": null,
              "duration": 10878,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://rahulshettyacademy.com/seleniumPractise/#/');\ncy.get('.search-keyword').type('ca');\ncy.wait(2000); // Assertion to check that 4 products are displayed\ncy.get('.product:visible').should('have.lengthOf', 4); // Using parent child for exact validation , without using  visible\ncy.get('.products').find('.product').should('have.lengthOf', 4); // Increase the quantity to 2 Add the second product to cart  and ensure that the text change to ADDED\ncy.get('.products').find('.product').eq(2).find('.increment').click();\ncy.get('.products').find('.product').eq(2).contains('ADD TO CART').click();\ncy.get('.products').find('.product').eq(2).contains('ADDED'); // Find the product and check that the text is Carrot and then add it to cart , for this we use EACH method provided by cypress for iteration \n// $el --> element \n// index --> represent the index \n// $list -- > is the complete list of elements\n// For each element the value is copied in $el and passed inside the each block where we can perform the operation\ncy.get('.products').as('productLocator');\ncy.get('@productLocator').find('.product').each(function ($el, index, $list) {\n  cy.log($el.text());\n  if ($el.find('h4.product-name').text().includes('Cashews')) {\n    cy.wrap($el).find('button').click();\n  }\n});\ncy.get('.tada');",
              "err": {},
              "uuid": "d6d30dd5-0070-4592-8f37-03018fbffdfe",
              "parentUUID": "972ad3d4-61ce-4a49-a6af-b115bd5dad3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC3: Get page title and logo",
              "fullTitle": "My First Test : This is Test Suite TC3: Get page title and logo",
              "timedOut": null,
              "duration": 214,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://rahulshettyacademy.com/seleniumPractise/#/');\ncy.get('.brand').then(function (logoElement) {\n  cy.log(logoElement.text());\n}); // cy.get('.brand').text()   // this also fails as text() is not a cypress command",
              "err": {},
              "uuid": "67878606-2a41-40b9-b9a0-e9db277b4baf",
              "parentUUID": "972ad3d4-61ce-4a49-a6af-b115bd5dad3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC4: Optimized assertion",
              "fullTitle": "My First Test : This is Test Suite TC4: Optimized assertion",
              "timedOut": null,
              "duration": 10867,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://rahulshettyacademy.com/seleniumPractise/#/');\ncy.get('.search-keyword').type('ca');\ncy.wait(2000); // this creates alias for the element and we can use this directly\n// in future so we need to change only 1 place and not everywhere\ncy.get('.products').as('productParentElement');\ncy.get('@productParentElement').find('.product').should('have.length', 4);\ncy.get('.brand').then(function (logoElement) {\n  cy.log(logoElement.text());\n});\ncy.get('.brand').then(function (logoElement) {\n  console.log(logoElement.text());\n});\ncy.get('.brand').should('have.text', 'GREENKART1'); // should comes from chai library",
              "err": {
                "message": "AssertionError: Timed out retrying after 8000ms: expected '<div.brand.greenLogo>' to have text 'GREENKART1', but the text was 'GREENKART'",
                "estack": "AssertionError: Timed out retrying after 8000ms: expected '<div.brand.greenLogo>' to have text 'GREENKART1', but the text was 'GREENKART'\n    at Context.eval (https://rahulshettyacademy.com/__cypress/tests?p=cypress\\integration\\examples\\Test1.js:151:22)",
                "diff": "- 'GREENKART'\n+ 'GREENKART1'\n"
              },
              "uuid": "c5b16a51-1e86-49e4-91d2-0700ff54662f",
              "parentUUID": "972ad3d4-61ce-4a49-a6af-b115bd5dad3d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d6d30dd5-0070-4592-8f37-03018fbffdfe",
            "67878606-2a41-40b9-b9a0-e9db277b4baf"
          ],
          "failures": [
            "9213dab1-8d0e-4786-8d3b-97b42c434b13",
            "c5b16a51-1e86-49e4-91d2-0700ff54662f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 22352,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false
      },
      "version": "5.2.0"
    }
  }
}